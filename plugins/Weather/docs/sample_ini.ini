[Weather 0.3.x Update Data 1.5]

; This file contains the information required for the weather protocol to obtain update.
; For the plugin to function properly, at least one of these file must be present.
; The proper location of these files is:  plugins\weather

; Note that for the entire file, DO NOT put spaces before or after the "=".  The groups
; and setting names (for example, [Header] and Name) are not case sensitive; however,
; the values set for each settings ARE case sensitive.

; Also note that the first line of this file must be either one of the following:
;	[Weather 0.3.x Update Data]		    (min. req. v0.3.0.0)
;	[Weather 0.3.x Update Data 1.1]		(min. req. v0.3.1.8)
;	[Weather 0.3.x Update Data 1.1a]	(min. req. v0.3.2.8)
;	[Weather 0.3.x Update Data 1.2]		(min. req. v0.3.5.0)
;	[Weather 0.3.x Update Data 1.3]		(min. req. v0.3.8.0)
;	[Weather 0.3.x Update Data 1.4]		(min. req. v0.3.8.12)
;	[Weather 0.3.x Update Data 1.5]		(min. req. v0.4.0.2)

; Minimun version for not crashing Miranda (Set to this version to prevent the ini from 
; loading in an old version of weather plugin and crash Miranda)
;  1.1a	String longer than 256 characters.
;  1.1	More than 16 data items in the ini
;	Not using [/...] footer at the end of the list
;  1.0	All other features

; Minimun version for using the new features (Set to this version to prevent invalid data
; for user with old version of weather plugin. However, the other features still works)
;  1.5  Using "UserAgent="
;  1.4  Using "Cookie="
;  1.3  Using "Update Url2=" & "Update Url3="
;  1.2	Using the operation "Break Data="
;	Using the setting "Hidden=" for each data item
;	Assign weather icons from ini
;  1.1a	Support for the units: Day, Month, %, Deg, Cond
;  1.1	Using the operation "Set Data="
;  1.0	All other features

; Revision history:
;  1.5  (Updated in v0.4.0.2)
;   New "UserAgent="
;  1.4  (Updated in v0.3.8.12)
;   New "Cookie="
;  1.3  (Updated in v0.3.8.0)
;   New "Update Url2=" & "Update Url3="
;  1.2  (Updated in v0.3.5.0; minimun req. v0.3.5.0)
;	New operation "Break Data="
;	New setting "Hidden=" that hide the data item from the mor data list
;	Weather icon assignment from the ini
;  1.1a (Updated in v0.3.4.0; minimun req. v0.3.2.8)
;	Support for Day, Month units
;  1.1a (Updated in v0.3.3.0; minimun req. v0.3.2.8)
;	Support the %, Deg, Cond units
;  1.1a	(For v0.3.2.8; minimun req. v0.3.2.8)
;	Now the string can be unlimited long (at least when it's within 4096 characters)
;  1.1	(For v0.3.2.0; minimun req. v0.3.1.8)
;	No more need to use [/...] headers (now it just like a normal INI file)
;	Support more weather data, and the number of data is no longer limited to 16
;	New operation "Set Data=" that assign data items without download the info
;  1.0	(For v0.3.0.0; minimun req. v0.3.0.0)
;	Initial version.

; ======================================================================================

; INI Headers

[Header]
; The name field contains the string that will appear to the user.  Please be unique.
;  (for example, "Yahoo Weather")
Name=

; The internal name is the string that will be used to set the weather ID, and are used
; internally to obtain the weather update information.  This string should be short and
; unique.
;  (for example, "yw" for "Yahoo Weather")
Internal Name=

; The following 3 fields are used in the plugin for INI information only, but it also
; gives user some information about the file.
Description=
Author=
Version=

; For the following three default fields, %s is used for station ID (the one with the
; internal name taken away, for example, CAXX0001)
[Default]
; The default URL for getting more weather information from contact menu or brief info
; dialog.  This setting is the default one assigned to the weather contact when it is
; added, but can be changed by user in the Edit Settings dialog.
Default URL=

; The default URL for getting weather map from contact menu.  Same as above.
Default Map=

; The URL for retrieving weather updates.
Update URL=
Update URL2=
Update URL3=
Update URL4=

; Set cookie(s) when retrieving weather updates.
Cookie=

; Set user agent for http requests.
UserAgent=

; ======================================================================================

; Weather Data Fields

; The following section list the data fields that are used to assign the data to be stored
; in the database.  These fields should be placed in the order of appearance in the
; download information.  For each item searched, the string before the item are discarded
; so if the order is wrong, no information can be obtained from the latter item.

; Format (not all settings are necessary):
;	[Field Name]
;	Start=
;	End=
;	Set Data=
;	Break Data=
;	Source=
;	Unit=
;	Hidden=

; Default Fields:
; [Condition]	Current condition, to assign condition icon
; [Update]	For display of the update time of the weather data
; [Temperature]	Current temperature
; [Feel]	Feel-like temperature
; [High]	Today's high
; [Low]		Today's low
; [Sunrise]	Sun rise time
; [Sunset]	Sun set time
; [Wind Direction]	Wind direction (not including speed)
;			Be careful to consider the no wind situation (ie. calm)
; [Wind Speed]	The speed of the wind
; [Pressure]	Barometer pressure
; [Visibility]	Visibility, if the value is 0 or non-numerical value, then unit conversion
;		for this will not run and original string is retained
; [Humidity]	Humidity, without a % sign.

; Special Fields:
; [Alert]
; 	Special item for weather alert.
; 	If the data retrieved for this field is non-empty, then a special alert popup will
;	display and the city on the contact list will be in a special state (using the
;	setting for "Contact to whom you have a different visibility".
;	This will be reset to normal once the alert field becomes empty.
; [Ignore]
;	Special item for the plugin to ignore what the value it gets and all errors when
;	getting it.  The value obtained for this field will not be written into the
;	database, and no popup and notification will be raised.  This is useful to skip
;	some specific text or end the download script.  Multiple placement of this field
;	is allowed.
; 	  Note:	For prevent the popup of error message, v0.3.2.11 is required

; Custom Fields:
; [%name%]
;	Where %name% can be any string you want.


; Settings:
; Settings for obtaining data: "Start=", "End=", "Set Data=", "Break Data=", "Source="

; There are 3 ways for the plugin to obtain the information string:
; 1. Parse directly from the webpage by specifying start and end strings.  Note that these
;    strings are case sensitive.

;    When parsing the information, the following items are removed:
;	HTML tags	example: <b> </b>
;	symbols		example: &nbsp;
;	linefeed and tabs
;	multiple spaces, spaces at the beginning and at the end of the string
;    Also, if the start field is blank, that means the information starts immediately
;    after the string from the last "End=" field.  If the end field is blank, that means
;    the information ends at the first space the plugin encounters (even if it is inside
;    a HTML tag).

;    An example, for parsing
;	"<sth before>Partly <!-- something in middle -->&nbsp;  Cloudy<sth after>
;    The code to give "Partly Cloudy" (without quotation):
;	[Condition]
;	Start=<sth before>
;	End=<sth after>

; 2. Concatenate strings, using "Set Data=", can merge various string together by placing
;    them around the operator " & " (without the quotation mark but with the 2 spaces).
;	For the variable strings (ie. the data item retrieved previously), use []
;	For constant strings, use ""

;    For example, merging two condition strings "Condition 1" and "Condition 2":
;   	[Condition]
;   	Set Data=[Condition 1] & " and " & [Condition 2]

;    Another example, copy the content of "Condition
;   	[Copy of Condition]
;   	Set Data=[Condition]

; 3. Break a string into 2, using "Break Data=", by specifying the string in between the
;    two substrings.  The first half will store into the name specify by the header, and
;    the second half will be specified by "End="

;    An example, to reverse what we did in Example 2 (the two condition strings):
;	[Condition 1]
;	Break Data= and 
;	Source=Condition
;	End=Condition 2

; Other Settings:
; Unit=
;    Specify the unit for the data, for use in unit conversion.  The conversion to use
;    depends on the value assigned.
;	For temperature conversion:		C, F, K
;	For speed conversion:			km/h, m/s, mph, knots
;	For pressure conversion:		hPa, kPa, mb, torr, mm, in
;	For distance conversion:		km, miles
;	For adding a percent sign at the end:	%
;	For adding a degree sign at the end:	Deg
;	Convert condition str to proper case:	Cond
;	For weekday string length:		Day
;	For month string length:		Month

; Hidden=
;    Acceptable values: true, false
;    Using this on any field will prevent it from being displayed in the "More Info"
;    list, but its value will still be stored in the database.

; Url=
;    Acceptable values: 1, 2, 3
;    Specifies the url on where to look for data item
;    If parameter is not specified item is searched on all urls, the last found will be used

; Here's an example:
[Condition]
Start=
End=
Unit=Cond

[Temperature]
Start=
End=
Unit=C

[Humidity TEMP]
Start=
End=
Hidden=true

[Humidity]
Set Data=[Humidity TEMP] & "%"

;  - or -

[Humidity]
Start=
End=
Unit=%


; ======================================================================================

; The setting for find and add contacts.

; ID search is used when the user type in the ID in the "Station ID" field and pressed
; "Search"
[ID Search]

; This can be "true" or "false" (without quotation, not case sensitive)
; If this is set to "false", all the following strings are ignored and the ID are NOT
; going to search for this weather service.
; If this field is set to FALSE, no matter what the user type for station ID, the
; plugin will always return a result with station name empty and ID the same as what
; the user has typed.
Available=

; The URL for ID search.  Note that %s is used for placing the ID.
Search URL=

; The string appeared in the downloaded information when there is no match
;	(ie. "Document not found")
; If this string is found while searching, the search process quit and return no result.
Not Found Str=

; Similar to weather information retrival above.  This is the string preceeding the
; station name obtained from searching.  Note that the parsing is the same as above, and
; spaces can be used.
Name Start=

; This is what's after the station name.
Name End=

; END ID SEARCH

; Name search is used when the user type in any of the name field (Nick, First, Last) and
; click on the "search" button.
[Name Search]

; This can be "true" or "false" (without quotation, not case sensitive)
; If this is set to "false", then the plugin igmore the information stated in the Single
; fields (ie. from "Single Name Start" to "Single ID End")
Single Result=

; This can be "true" or "false" (without quotation, not case sensitive)
; If this is set to "false", then the plugin igmore the information stated in the Multiple 
; fields (ie. from Multiple Name Start" to Multiple ID End")
; Note that if both single and multiple are disabled, the Name search are disabled for 
; this weather service.
Multiple Result=

; The URL for doing the name search.  %s will be replaced by the station name input from
; the user.
Search URL=

; The string appeared in the downloaded information when there is no match
;	(ie. "Document not found")
; If this string is found while searching, the search process quit and return no result.
Not Found Str=

; This field determines whether the search will return a single result or multiple result
; If the string stated in this field is found and Single Result is enabled from above, the
; settings for single result will be used.  Otherwise, the settings in multiple result
; will be used.
Single Result Str=

; These fields are for the single result

; Determine which item is the first to appear in the download search result file
; This field can be ID or Name (not case sensitive).
; For example, if ID is used here, it means that station ID appears before the station
;   name in the downloaded document.
Single First=

; The start and end string for station name.  Parsing using the same way as discribed
; above for weather information.
; Note that if both fields are empty, then whatever the user type into the search field
; will be used for the station name.
Single Name Start=
Single Name End=

; The start and end string for station name.  Parsing using the same way as discribed
; above for weather information.
Single ID Start=
Single ID End=

; The multiple result is similar to the single result as described above.
; For this search, the plugin will loop until no more Name's and ID's can be founded
; in the downloaded file.
Mult First=
Mult Name Start=
Mult Name End=
Mult ID Start=
Mult ID End=

; END NAME SEARCH

; For a workaround of URL forwarding issue:
; If the page retrieved contains URL forward (ie. the 302 code), the download content
; will appears as:
;	Moved/Location: <forwarded URL>
; This might be useful for writing the start/end string settings for the single result
; Name Search.
; A typical use of this is:
;	Single Result Str=Moved/Location:
;	Single First=ID			(this isn't really matter)
;	Single Name Start=
;	Single Name End=		(this will use whatever user type in as stn name)
;	Single ID Start=/newpages/	(what's before the station ID in the URL)
;	Single ID End=.html		(what's after the station ID)

; ======================================================================================

; INI Defined Icon Assignments (new in v1.2)

; These assignment will take the highest priority (before the internal and the langpack
; defined assignment) when matching the condition (icon) to the current condition.
; These settings are INI specific, which means that the setting in one INI will not affect
; the stations that are associated to another INI.

; Format:
; {icon name}={string to search}

; The "icon name" is the icon to assigned with the condition string containing the string
; specified in "string to search" is found.

; Available icon names are (in order of assigning priority):
;  Lightning, Fog, Snow Shower, Snow, Rain Shower, Rain, Partly Cloudy, Cloudy, Sunny, N/A

; For examples, mimicking what internal icon selection and langpack_defweather do (of
; course, putting these in an actual INI is not needed and is waste of space and memory).

[Icons]
Sunny=Sunny
Sunny=Clear
Sunny=Fair

Partly Cloudy=Mainly Sunny
Partly Cloudy=Mainly Clear
Partly Cloudy=Partly
Partly Cloudy=Mostly
Partly Cloudy=Clouds

Cloudy=Cloudy
Cloudy=Overcast

Rain=Drizzle
Rain=Rain

Rain Shower=Rain Shower
Rain Shower=Shower

Snow=Snow
Snow=Ice
Snow=Freezing
Snow=Wintery

Snow Shower=Snow Shower
Snow Shower=Flurries

Ligntning=Thunder
Ligntning=T-storm

Fog=Fog
Fog=Mist
Fog=Smoke
Fog=Haze
Fog=Sand
Fog=Dust
