#muuid {59b0036e-5403-422e-883b-c9aaf425682b}
;============================================================
;  File: Variables.dll
;  Plugin: Variables
;  Version: 0.2.3.10
;  Authors: P Boon
;============================================================
[Adds support for dynamic variables in strings for plugins.]

;file \plugins\Variables\res\Variables.rc
[Parse options]
Možnosti zpracování
[Automatically strip "end of line" characters]
Automaticky odstranit konce řádků (EOL)
[Automatically strip white space]
Automaticky odstranit netisknutelné znaky
[Automatically strip all non-parsing characters]
Automaticky odstranit všechny nezpracovatelné znaky
[Test area]
Místo pro zkoušky
[Click on the help button to get more information]
Více informací se dozvíte kliknutím na tlačítko Nápověda
[Parse the following string at startup]
Při spuštění zpracovat níže uvedené
[Auto parse]
Automaticky zpracovat
[Parse]
Zpracovat
[Please enter your input below]
Zadejte prosím požadovaný text:
[Don't set a contact]
Nenastavovat kontakt
[Set to the following contact]
Nastavit následující kontakt
[The token %subject% is translated into a special contact, which depends on the situation in which the string is parsed. Use this dialog to simulate the contact to which %subject% translates. An example for using this token is: !cinfo(%subject%,display).]

[Description]
Popis
[Setting]
Nastavení
[The token %extratext% is translated into a string which depends on the situation in which the string is parsed. Use this dialog to simulate the string to which %extratext% translates.]

[Close]
Zavřít
[The Variables plugin translates various tokens into a certain value. An example is: I'm running Miranda %mirandaversion%. The substring %mirandaversion% will be translated into the correct version number. The following list shows all available tokens.]

[Notes]
Poznámky
[Variables...]
Proměnné...
;file \plugins\Variables\src\help.cpp
[Token]
Token
[Tokens]
Tokeny
[Input]
Vstup
[Cancel]
Zrušit
[Help]
Nápověda
[Variables Help]
Nápověda pro doplněk Variables
[Open String Formatting Help]
Otevřít nápovědu o proměnných
;file \plugins\Variables\src\options.cpp
[Services]
Služby
[Variables]
Proměnné
;file \plugins\Variables\src\parse_alias.cpp
[Alias]
Alias
[user defined]
definováno uživatelem
[stores y as alias named x]
uloží y jako alias s názvem x
;file \plugins\Variables\src\parse_external.cpp
[Stopped]
Zastaveno
[Paused]
Pauza
[External Applications]
Externí programy
[retrieves song name of the song currently playing in Winamp]
Zjistí název skladby právě přehrávané programem Winamp
[retrieves current Winamp state (Playing/Paused/Stopped)]
Zjistí aktuální stav přehrávače Winamp (přehrává/pauza/zastaveno)
;file \plugins\Variables\src\parse_inet.cpp
[Internet Related]
Internet
[converts each non-html character into hex format]

[converts each hex value into non-html character]

[converts a 32-bit number to IPv4 dotted notation]
zkonvertuje 32bitové číslo do formátu IP(v4) adresy
[converts a 32-bit number (in host byte order) to IPv4 dotted notation]
zkonvertuje 32bitové číslo do formátu IP(v4) adresy (zohlední pořadí bajtů)
;file \plugins\Variables\src\parse_logic.cpp
[Logical Expressions]
Logické výrazy
[performs logical AND (x && y && ...)]
logické AND (x && y && ...)
[Boolean FALSE]
Boolean FALSE
[performs w, then shows z and performs y while x is TRUE]
smyčka FOR (provede w, pak zobrazí z a provádí y dokud je x TRUE)
[shows y if x is TRUE, otherwise it shows z]

[shows x if x is TRUE, otherwise it shows y (if(x,x,y))]

[the first argument parsed successfully]

[y if w = x, else z]

[y if w > x, else z]
je-li w > x, pak y; jinak z
[y if string length of w > x, else z]
je-li délka řetězce w > x, pak y; jinak z
[TRUE if x = y]

[TRUE if x > y]
je-li x > y, pak TRUE
[TRUE if x is longer than y]
je-li x delší než y, pak TRUE
[performs logical NOT (!x)]
logické NOT (!x)
[performs logical OR (x || y || ...)]
logické OR (x || y || ...)
[Boolean TRUE]
Boolean TRUE
[performs logical XOR (x ^ y)]
logické XOR (x ^ y)
;file \plugins\Variables\src\parse_math.cpp
[Mathematical Functions]
Matematické funkce
[x + y + ...]
x + y + ...
[x divided by y]
x děleno y
[converts decimal value x to hex value and padds to length y]
zkonvertuje (dekadické) číslo x na hexadecimální a vyplní zbytek do délky y
[x modulo y (remainder of x divided by y)]
x modulo y (zbytek po dělení)
[x times y]
x krát y
[x times y divided by z]
x krát y děleno z
[minimum value of (decimal) arguments]
minimální hodnota ze zadaných (dekadických) argumentů
[maximum value of (decimal) arguments]
maximální hodnota ze zadaných (dekadických) argumentů
[pads decimal value x to length y with zeros]

[random number]
náhodné číslo
[x - y - ...]
x - y - ...
;file \plugins\Variables\src\parse_metacontacts.cpp
[Metacontacts]
Metakontakty
[get parent metacontact of contact x]

[get default subcontact x]

[get the 'most online' subcontact x]

;file \plugins\Variables\src\parse_miranda.cpp
[Miranda Core Global]

[path to Miranda root folder]
cesta ke kořenové složce Mirandy
[path to folder containing Miranda profiles]
cesta ke složce obsahující profily Mirandy
[name of current Miranda profile (filename, without extension)]
jméno aktuálního profilu Mirandy (jméno souboru bez přípony)
[will return parsed string %miranda_profilesdir%\\%miranda_profilename%]
vrátí zpracovaný řetězec %miranda_profilesdir%\\%miranda_profilename%
[will return parsed string %miranda_profilesdir%\\%miranda_profilename%\\AvatarCache]

[will return parsed string %miranda_profilesdir%\\%miranda_profilename%\\Logs]

[Miranda Core OS]

[same as environment variable %APPDATA% for currently logged-on Windows user]
stejné jako systémová proměnná %APPDATA% pro aktuálně přihlášeného uživatele Windows
[username for currently logged-on Windows user]
jméno pro aktuálně přihlášeného uživatele Windows
["My Documents" folder for currently logged-on Windows user]
složka "Dokumenty" pro aktuálně přihlášeného uživatele Windows
["Desktop" folder for currently logged-on Windows user]
složka "Plocha" pro aktuálně přihlášeného uživatele Windows
[Miranda Related]
Miranda
[translates status code x into a status description]
převede stavový kód x na popis stavu
[zth contact with property y described by x, example: (unregistered,nick) (z is optional)]

[number of contacts with property y described by x, example: (unregistered,nick)]
počet kontaktů s vlastností y blíže určenou pomocí x; příklad: (<uživ. jméno>,<přezdívka>)
[info property y of contact x]
informace y kontaktu x
[database profile name]

[database profile path]

[database setting z of module y of contact x and return w if z doesn't exist (w is optional)]

[get event for contact x (optional), according to y,z,w, see documentation]

[get last seen time of contact x in format y (y is optional)]

[get last seen date of contact x in format y (y is optional)]

[get last seen status of contact x]

[path to the Miranda NG executable]

[current status description of protocol x (without x, the global status is retrieved)]
aktuální stav protokolu x (nezadáte-li x, přečte globální stav)
[info property y of protocol ID x]

[retrieves the subject, depending on situation]

[translates x]

[get the version of Miranda]
zjistí verzi Mirandy
[get the contact display name]

[get the date and time (using Miranda format)]

[TRUE if service function exists]

;file \plugins\Variables\src\parse_regexp.cpp
[Regular Expressions]
Regulární výrazy
[(ANSI input only) the number of substring matches found in y with pattern x]
(pouze pro ANSI) počet nalezených řetězců v textu y při použití masky x
[(ANSI input only) substring match number z found in subject y with pattern x]

;file \plugins\Variables\src\parse_str.cpp
[String Functions]
Práce s řetezci
[converts each first letter of a word to uppercase, all others to lowercase]
zkonvertuje první písmeno slova na VELKÉ; vše ostatní změní na MALÉ
[converts each first letter of a word to uppercase]
zkonvertuje první písmeno slova na VELKÉ
[inserts 'end of line' character]
vloží znak konce řádku (EOL)
[depends on calling plugin]
závislost na doplňku
[replace all occurrences of \\n (Unix) by \\r\\n (Windows)]
nahradit všechny výskyty \\n (Unix) za \\r\\n (Windows)
[cuts x after the first line and appends y (y is optional)]

[replaces all end of line characters by y (y is optional)]
nahradí všechny znaky konce řádku znakem y (y není povinné)
[inserts string y at position z in string x]
vloží řetězec y na pozici z řetězce x
[trims x to length y, keeping first y characters]
ořízne x na délku y, přičemž ponechá prvních y znaků
[length of x]
délka x
[the number of lines in string x]
počet řádků v řetězci x
[the longest string of the arguments]
nejdelší řetězec ze zadaných argumentů
[converts x to lowercase]
zkonvertuje x na malá písmena
[no operation, x as given]

[pads x to length y prepending character z (z is optional)]

[pads x to length y appending character z (z is optional)]

[pads x to length y prepending character z, or cut if x is longer (z is optional)]

[pads x to length y appending character z, or cut if x is longer (z is optional)]

[repeats x y times]
x zopakuje y-krát
[replace all occurrences of y in x with z, multiple y and z arguments allowed]

[trims x to length y, keeping last y characters]
ořízne x na délku y, přičemž ponechá posledních y znaků
[moves string x, z characters to the left and trims it to y characters]

[TRUE if x equals y]
je-li x rovno y, pak TRUE
[TRUE if x equals any of the following arguments]

[TRUE if the first z characters of x equal y]

[TRUE if x equals y, ignoring case]

[TRUE if the first z characters of x equal y, ignoring case]

[the shortest string of the arguments]
nejkratší řetězec ze zadaných argumentů
[location of first occurrence of character y in string x]

[location of last occurrence of character y in string x]

[location of first occurrence of string y in x]

[substring of x starting from position y to z]

[the xth string of the arguments]
x-tý řetězec ze zadaných argumentů
[z if y equals x, multiple y and z arguments allowed]

[removes white spaces in before and after x]
odstraní netisknutelné znaky před a za x
[inserts x tab characters (x is optional)]
vloží x tabulátorů (x není povinné)
[converts x to upper case]
zkonvertuje x na VELKÁ písmena
[words (separated by white spaces) number y to z from string x (z is optional)]

;file \plugins\Variables\src\parse_system.cpp
[System Functions]
Systémové funkce
[computer name]
název počítače
[CPU load of process x (without extension) (x is optional)]
indikuje vytížení CPU procesem x (bez přípony) (x není povinné)
[current date in format y (y is optional)]
aktuální datum ve formátu y (y není povinné)
[current time in format y (y is optional)]
aktuální čas ve formátu y (y není povinné)
[the directory y directories above x]
vypíše adresář umístěný ve struktuře y adresářů nad x
[strips y directories from x]
odstraní y adresářů z x
[number of seconds between date x and y (x and y in format: M/d/yy H:m:s)]
počet sekund mezi daty x a y (x a y musí být ve formátu M/d/rr H:m:s)
[TRUE if directory x exists]

[TRUE if file x exists]
nastaví TRUE, jestliže existuje soubor x
[window title of first window of class x]
záhlaví prvního okna třídy x
[shows files and directories of directory x, with filter y, separated by z (y and z optional)]

[TRUE if process x is running]
nastaví TRUE, jestliže je spuštěný process x
[value y from registry key x (REG_SZ (string) values only)]

[formats timestamp x (seconds since 1/1/1970) in date format y]
upraví x (počet sekund od 1.1.1970) na datum dle formátu y
[formats timestamp x (seconds since 1/1/1970) in time format y]
upraví x (počet sekund od 1.1.1970) na čas dle formátu y
[y > 0: line number y from file x, y = 0: the whole file, y < 0: line y counted from the end, y = r: random line]

[uptime in seconds]
doba od spuštění počítače (v sek.)
[any environment variable defined in current Windows session (like %systemroot%, %allusersprofile%, etc.)]
nějaká systémová proměnná definovaná v aktuální relaci Windows (jako %systemroot%, %allusersprofile% atd.)
[expand environment variable x]
vypíše obsah proměnné x
[user name]
uživatelské jméno
[text from clipboard]
text ze schránky
;file \plugins\Variables\src\parse_variables.cpp
[variable set by put(s) with name x]

[x, and stores y as variable named x]

[only stores y as variables x]
pouze uloží y jako proměnnou x
;file \plugins\Variables\src\variables.cpp
;file \plugins\Variables\src\variables.h
[--- Special characters ---\r\n\r\nThe following characters have a special meaning in a formatting string:\r\n\r\n?<function>(<arguments>)\r\nThis will parse the function given the arguments, the result will be parsed again. Example: Today is ?cdate(yyyy/MM/dd).\r\n\r\n!<function>(<arguments>)\r\nThis will parse the function given the arguments, the result will not be parsed again. Example: Message waiting: !message(,first,rcvd,unread).\r\n\r\n%<field>%\r\nThis will parse the given field. Example: I installed Miranda at: %mirandapath%.\r\n\r\n`<string>`\r\nThis will not parse the given string, any function, field or special character in the string will shown in the result without being translated. Example: Use `%mirandapath%` to show the installation path.\r\n\r\n#<comment>\r\nThis will add a comment in the formatting string. Everything from the # character to the end of the line will be removed. Example: %dbprofile% #this is a useless comment.\r\n\r\n\r\n--- Contacts ---\r\n\r\nWhenever a functions requires a contact as an argument, you can specify it in two ways:\r\n\r\n(1) Using a unique ID (UIN for ICQ, email for MSN) or, a protocol ID followed by a unique ID in the form <PROTOID:UNIQUEID>, for example <MSN:miranda@hotmail.com> or <ICQ:123456789>.\r\n\r\n(2) Using the contact function:\r\n?contact(x,y)\r\nA contact will be searched which will have value x for its property y, y can be one of the following:\r\nfirst, last, nick, email, ID or display\r\n\r\nFor example: ?contact(miranda@hotmail.com,email) or ?contact(Miranda,nick). The contact function will return either a unique contact according to the arguments or nothing if none or multiple contacts exists with the given property.]

